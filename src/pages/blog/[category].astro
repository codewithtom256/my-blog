---
import PreviewCard from "../../components/PreviewCard.astro";
import Section from "../../components/Section.astro";
import BaseLayout from "../../layouts/BaseLayout.astro";

export async function getStaticPaths() {
  const allPosts = Object.values(
    import.meta.glob("./posts/*.md", { eager: true })
  );

  const uniqueTags = [
    ...new Set(
      allPosts
        .map((post: any) => post.frontmatter.postCategory.toLowerCase())
        .flat()
    ),
  ];

  return uniqueTags.map((category) => {
    const filteredPosts = allPosts.filter(
      (post: any) =>
        typeof post.frontmatter.postCategory === "string" &&
        post.frontmatter.postCategory.toLowerCase() === category.toLowerCase()
    );
    return {
      params: { category },
      props: { posts: filteredPosts, uniqueTags },
    };
  });
}

const { url } = Astro.request;
function isActive(path: string) {
  const currentUrl = new URL(url, Astro.site || "http://localhost");
  // Only match exact path, not "/"
  return path !== "/" && currentUrl.pathname === path + "/";
}

const { category } = Astro.params;
const { posts, uniqueTags } = Astro.props;

const pageTitle = `Posts in category: ${category}`;
---

<BaseLayout pageTitle={pageTitle}>
  <Section
    title={`Posts in "${category.charAt(0).toUpperCase() + category.slice(1)}"`}
    description="Explore all my latest blog posts in this category."
  >
    <nav class="mt-8 space-x-2">
      <a
        href="/blog/"
        class={`btn btn-sm font-bold text-sm ${isActive("/blog") ? "btn-primary" : ""}`}
        >All</a
      >
      {
        uniqueTags.map((tag) => (
          <a
            href={`/blog/${tag}/`}
            class={`btn btn-sm font-bold text-sm ${isActive(`/blog/${tag}`) ? "btn-primary" : ""}`}
          >
            {tag.charAt(0).toUpperCase() + tag.slice(1)}
          </a>
        ))
      }
    </nav>

    <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mt-8">
      {
        posts.map((post: any) => (
          <PreviewCard
            link={post.url}
            previewImage={post.frontmatter.image}
            title={post.frontmatter.title}
            description={post.frontmatter.description}
            date={post.frontmatter.pubDate}
            category={post.frontmatter.postCategory}
          />
        ))
      }
    </div>
  </Section>
</BaseLayout>

<!-- <BaseLayout pageTitle={category}>
  <nav>
    <a href="/blog">All</a>
    <a href="/blog/unity">Unity</a>
    <a href="/blog/tutorial">Tutorials</a>
  </nav>

  <p>Posts tagged with {category}</p>
  <ul>
    {
      posts.map((post: any) => (
        <li>
          <a href={post.url}>{post.frontmatter.title}</a>
        </li>
      ))
    }
  </ul>
</BaseLayout> -->
